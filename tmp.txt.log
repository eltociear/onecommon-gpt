{"action_status": "started", "timestamp": 1683526882.7771006, "task_uuid": "49f03715-8265-4170-a5b0-7c25d6e91f97", "action_type": "tmp.txt", "task_level": [1]}
{"action_status": "started", "timestamp": 1683526884.875352, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "<class 'oc.prompt.Reformat'>", "task_level": [1]}
{"input": {"source": "Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light"}, "action_status": "started", "timestamp": 1683526884.8754141, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Input Function", "task_level": [2, 1]}
{"action_status": "succeeded", "timestamp": 1683526884.8761787, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Input Function", "task_level": [2, 2]}
{"prompt": "Text:\nyes ! lightest on all the way to the right ? if so click that one ! <selection>\nReformat the text. Do not change the words.\nAnswer:\nYes! If you want the lightest, click the one all the way to the right? <selection>.\n\nText:\nlarge black next to tint light\nReformat the text. Do not change the words.\nAnswer:\nLarge black next to tiny light.\n\nText:\ni have a light grey small dot next to a medium grey medium dot\nReformat the text. Do not change the words.\nAnswer:\nI have a light grey small dot next to a medium grey medium dot.\n\nText:\ntwo small dots almost identical in size close together in diagonal line ?\nReformat the text. Do not change the words.\nAnswer:\nTwo small dots, almost identical in size, close together in a diagonal line?\n\nText:\nokay <selection>\nReformat the text. Do not change the words.\nAnswer:\nOkay. <selection>.\n\nText:\nDo you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light\nReformat the text. Do not change the words.\nAnswer:\n", "action_status": "started", "timestamp": 1683526884.8762069, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Prompted", "task_level": [3, 1]}
{"action_status": "succeeded", "timestamp": 1683526887.1389878, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Prompted", "task_level": [3, 2]}
{"result": "Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light?", "action_status": "started", "timestamp": 1683526887.139176, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Result", "task_level": [4, 1]}
{"action_status": "succeeded", "timestamp": 1683526887.139288, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "Result", "task_level": [4, 2]}
{"action_status": "succeeded", "timestamp": 1683526887.13937, "task_uuid": "0646efc6-c2e1-4160-bfd9-bdef9df5e76a", "action_type": "<class 'oc.prompt.Reformat'>", "task_level": [5]}
{"action_status": "started", "timestamp": 1683526899.614259, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "<class 'oc.prompt.UnderstandJson'>", "task_level": [1]}
{"reason": "module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations", "exception": "builtins.AttributeError", "message": "{\"'input'\": '{\\'header\\': \\'from oc.fns.context import get_ctx\\\\nfrom oc.fns.shapes import is_triangle, is_line, is_square\\\\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\\\\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\\\\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\\\\nfrom oc.fns.spatial import get_middle\\\\nfrom oc.fns.spatial import get_distance, get_minimum_radius\\\\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\\\\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\\\\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\\\\nfrom oc.fns.lists import add\\\\nfrom oc.fns.lists import sort_state\\\\nimport numpy as np\\\\nfrom functools import partial\\\\nfrom itertools import permutations\\\\n\\', \\'blocks\\': [{\\'json\\': \"{\\'configdots\\': \\'x,y,z\\',\\\\n \\'configs\\': \\'getsets(idxs, 3)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_triangle([x,y,z], ctx)\\',\\\\n                  \\'name\\': \\'check_xyz_triangle\\'},\\\\n                 {\\'code\\': \\'all([is_light(dot, ctx) for dot in [x,y,z]])\\',\\\\n                  \\'name\\': \\'check_xyz_light\\'},\\\\n                 {\\'code\\': \\'all([not all_close([x,y,z,dot], ctx) for dot in \\'\\\\n                          \\'idxs if dot not in [x,y,z]])\\',\\\\n                  \\'name\\': \\'check_xyz_alone\\'}],\\\\n \\'dots\\': \\'x,y,z\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'Got a triangle of 3 light grey dots by itself.\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'Got a triangle of 3 light grey dots by itself.\\'}, {\\'json\\': \"{\\'configdots\\': \\'x,y,z\\',\\\\n \\'configs\\': \\'getsets(idxs, 3)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_triangle([x,y,z], ctx)\\',\\\\n                  \\'name\\': \\'check_xyz_triangle\\'},\\\\n                 {\\'code\\': \\'all([is_light(dot, ctx) for dot in [x,y,z]])\\',\\\\n                  \\'name\\': \\'check_xyz_light\\'},\\\\n                 {\\'code\\': \\'all([not all_close([x,y,z,dot], ctx) for dot in \\'\\\\n                          \\'idxs if dot not in [x,y,z]])\\',\\\\n                  \\'name\\': \\'check_xyz_alone\\'}],\\\\n \\'dots\\': \\'x,y,z\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'Got a triangle of 3 light grey dots by itself.\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'Got a triangle of 3 light grey dots by itself.\\'}, {\\'json\\': \"{\\'configdots\\': \\'a,b,c\\',\\\\n \\'configs\\': \\'state\\',\\\\n \\'constraints\\': [{\\'code\\': \\'a == get_right([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_a_right\\'},\\\\n                 {\\'code\\': \\'a == largest([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_a_largest\\'},\\\\n                 {\\'code\\': \\'is_small(b, ctx)\\', \\'name\\': \\'check_b_tiny\\'},\\\\n                 {\\'code\\': \\'is_grey(b, ctx)\\', \\'name\\': \\'check_b_grey\\'},\\\\n                 {\\'code\\': \\'b == get_top([a,b,c], ctx)\\', \\'name\\': \\'check_b_top\\'}],\\\\n \\'dots\\': \\'a,b,c\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Could be. One on right is largest with a tiny gray on top??\\',\\\\n \\'type\\': \\'Follow up question.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Could be. One on right is largest with a tiny gray on top??\\'}, {\\'json\\': \"{\\'configdots\\': \\'x, y\\',\\\\n \\'configs\\': \\'getsets(idxs, 2)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'all_close([x,y], ctx)\\', \\'name\\': \\'check_xy_pair\\'},\\\\n                 {\\'code\\': \\'is_dark(x, ctx) and is_dark(y, ctx)\\',\\\\n                  \\'name\\': \\'check_xy_dark\\'},\\\\n                 {\\'code\\': \\'is_right(y, x, ctx)\\', \\'name\\': \\'check_y_right_x\\'},\\\\n                 {\\'code\\': \\'is_above(y, x, ctx)\\', \\'name\\': \\'check_y_above_x\\'},\\\\n                 {\\'code\\': \\'same_size([x,y], ctx)\\',\\\\n                  \\'name\\': \\'check_xy_same_size\\'}],\\\\n \\'dots\\': \\'x, y\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'Nevermind. Do you see a pair of dark dots? One with another above \\'\\\\n         \\'and to the right of it? Same size as well.\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\\'}, {\\'json\\': \"{\\'select\\': \\'False\\', \\'speaker\\': \\'You\\', \\'text\\': \\'No.\\', \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'No.\\'}, {\\'json\\': \"{\\'configdots\\': \\'x,\\',\\\\n \\'configs\\': \\'getsets(idxs, 1)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_large(x, ctx)\\', \\'name\\': \\'check_x_large\\'},\\\\n                 {\\'code\\': \\'is_grey(x, ctx)\\', \\'name\\': \\'check_x_grey\\'},\\\\n                 {\\'code\\': \\'is_middle(x, None, ctx)\\', \\'name\\': \\'check_x_center\\'}],\\\\n \\'dots\\': \\'x\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'What about a large medium grey dot near the center?\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'What about a large medium grey dot near the center?\\'}, {\\'json\\': \"{\\'configdots\\': \\'a,\\',\\\\n \\'configs\\': \\'state\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_smaller(x, a, ctx)\\', \\'name\\': \\'check_x_smaller_a\\'},\\\\n                 {\\'code\\': \\'is_dark(x, ctx)\\', \\'name\\': \\'check_x_dark\\'},\\\\n                 {\\'code\\': \\'all_close([a,x], ctx)\\',\\\\n                  \\'name\\': \\'check_x_next_to_a\\'}],\\\\n \\'dots\\': \\'a,x\\',\\\\n \\'newconfigs\\': \\'get1idxs(idxs, exclude=[a])\\',\\\\n \\'newdots\\': \\'x,\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Is there a smaller black one next to it?\\',\\\\n \\'type\\': \\'Follow up question, new dot.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Is there a smaller black one next to it?\\'}, {\\'json\\': \"{\\'configdots\\': \\'x,y,z\\',\\\\n \\'configs\\': \\'getsets(idxs, 3)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_line([x,y,z], ctx)\\', \\'name\\': \\'check_xyz_line\\'},\\\\n                 {\\'code\\': \\'x == get_top_left([x, y, z], ctx)\\',\\\\n                  \\'name\\': \\'check_x_top_left\\'},\\\\n                 {\\'code\\': \\'is_light(x, ctx)\\', \\'name\\': \\'check_x_light\\'},\\\\n                 {\\'code\\': \\'is_middle(y, [x,y,z], ctx)\\',\\\\n                  \\'name\\': \\'check_y_middle\\'},\\\\n                 {\\'code\\': \\'is_grey(y, ctx)\\', \\'name\\': \\'check_y_grey\\'},\\\\n                 {\\'code\\': \\'z == get_bottom_right([x, y, z], ctx)\\',\\\\n                  \\'name\\': \\'check_z_bottom_right\\'},\\\\n                 {\\'code\\': \\'is_dark(z, ctx)\\', \\'name\\': \\'check_z_dark\\'}],\\\\n \\'dots\\': \\'x,y,z\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'No. Do you see three dots in a diagonal line, where the top left dot \\'\\\\n         \\'is light, middle dot is grey, and bottom right dot is dark?\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\\'}, {\\'json\\': \"{\\'configdots\\': \\'a,b,c\\',\\\\n \\'configs\\': \\'state\\',\\\\n \\'constraints\\': [{\\'code\\': \\'a == get_top([a,b,c], ctx)\\', \\'name\\': \\'check_a_top\\'},\\\\n                 {\\'code\\': \\'b == get_middle([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_b_middle\\'},\\\\n                 {\\'code\\': \\'all_close([a, b], ctx)\\', \\'name\\': \\'check_ab_close\\'},\\\\n                 {\\'code\\': \\'is_darker(b, a, ctx)\\', \\'name\\': \\'check_b_darker_a\\'}],\\\\n \\'dots\\': \\'a,b,c\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Yes. Is the top one close to the middle darker one?\\',\\\\n \\'type\\': \\'Follow up question.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Yes. Is the top one close to the middle darker one?\\'}, {\\'json\\': \"{\\'configdots\\': \\'a,b,c\\',\\\\n \\'configs\\': \\'state\\',\\\\n \\'constraints\\': [{\\'code\\': \\'a == smallest([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_a_smallest\\'},\\\\n                 {\\'code\\': \\'a == get_bottom_right([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_a_bottom_right\\'}],\\\\n \\'dots\\': \\'a,b,c\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'Yes. And the smallest is on the bottom right.\\',\\\\n \\'type\\': \\'Follow up question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'Yes. And the smallest is on the bottom right.\\'}, {\\'json\\': \\'{\\\\\\'configdots\\\\\\': \\\\\\'a,b,c\\\\\\',\\\\n \\\\\\'configs\\\\\\': \\\\\\'state\\\\\\',\\\\n \\\\\\'constraints\\\\\\': [{\\\\\\'code\\\\\\': \\\\\\'is_large(a, ctx)\\\\\\', \\\\\\'name\\\\\\': \\\\\\'check_a_large\\\\\\'},\\\\n                 {\\\\\\'code\\\\\\': \\\\\\'not is_large(b, ctx)\\\\\\', \\\\\\'name\\\\\\': \\\\\\'check_b_not_large\\\\\\'},\\\\n                 {\\\\\\'code\\\\\\': \\\\\\'not is_large(c, ctx)\\\\\\', \\\\\\'name\\\\\\': \\\\\\'check_c_not_large\\\\\\'}],\\\\n \\\\\\'dots\\\\\\': \\\\\\'a\\\\\\',\\\\n \\\\\\'newconfigs\\\\\\': \\\\\\'[0]\\\\\\',\\\\n \\\\\\'newdots\\\\\\': \\\\\\'_\\\\\\',\\\\n \\\\\\'select\\\\\\': \\\\\\'True\\\\\\',\\\\n \\\\\\'speaker\\\\\\': \\\\\\'You\\\\\\',\\\\n \\\\\\'text\\\\\\': \"Yes, let\\\\\\'s select the large one. <selection>.\",\\\\n \\\\\\'type\\\\\\': \\\\\\'Select a dot.\\\\\\'}\\', \\'speaker\\': \\'You\\', \\'text\\': \"Yes, let\\'s select the large one. <selection>.\"}, {\\'json\\': \"{\\'configdots\\': \\'x,\\',\\\\n \\'configs\\': \\'getsets(idxs, 1)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'is_large(x, ctx)\\', \\'name\\': \\'check_x_large\\'},\\\\n                 {\\'code\\': \\'is_dark(x, ctx)\\', \\'name\\': \\'check_x_dark\\'},\\\\n                 {\\'code\\': \\'is_below(x, None, ctx) and is_left(x, None, ctx)\\',\\\\n                  \\'name\\': \\'check_x_below_left\\'}],\\\\n \\'dots\\': \\'x\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Do you see a large black dot on the bottom left?\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Do you see a large black dot on the bottom left?\\'}, {\\'json\\': \"{\\'configdots\\': \\'x,y,z\\',\\\\n \\'configs\\': \\'getsets(idxs, 3)\\',\\\\n \\'constraints\\': [{\\'code\\': \\'all_close([x,y,z], ctx)\\', \\'name\\': \\'check_xyz_close\\'},\\\\n                 {\\'code\\': \\'is_large(x, ctx)\\', \\'name\\': \\'check_x_large\\'},\\\\n                 {\\'code\\': \\'is_dark(z, ctx)\\', \\'name\\': \\'check_z_dark\\'},\\\\n                 {\\'code\\': \\'is_smaller(y, x, ctx)\\', \\'name\\': \\'check_y_smaller_x\\'},\\\\n                 {\\'code\\': \\'is_smaller(z, x, ctx)\\', \\'name\\': \\'check_z_smaller_x\\'},\\\\n                 {\\'code\\': \\'is_lighter(y, x, ctx)\\', \\'name\\': \\'check_y_lighter_x\\'},\\\\n                 {\\'code\\': \\'is_lighter(z, x, ctx)\\', \\'name\\': \\'check_z_lighter_x\\'},\\\\n                 {\\'code\\': \\'same_size([y,z], ctx)\\',\\\\n                  \\'name\\': \\'check_yz_same_size\\'},\\\\n                 {\\'code\\': \\'same_color([y,z], ctx)\\',\\\\n                  \\'name\\': \\'check_yz_same_color\\'}],\\\\n \\'dots\\': \\'x,y,z\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'Them\\',\\\\n \\'text\\': \\'I see a large black dot next to two smaller lighter dots. The two \\'\\\\n         \\'smaller ones are the same size and color. We have different views \\'\\\\n         \\'though.\\',\\\\n \\'type\\': \\'New question.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\\'}, {\\'json\\': \"{\\'configdots\\': \\'a,b,c\\',\\\\n \\'configs\\': \\'state\\',\\\\n \\'constraints\\': [{\\'code\\': \\'a == get_largest([a,b,c], ctx)\\',\\\\n                  \\'name\\': \\'check_a_largest\\'}],\\\\n \\'dots\\': \\'a\\',\\\\n \\'newconfigs\\': \\'[0]\\',\\\\n \\'newdots\\': \\'_\\',\\\\n \\'select\\': \\'True\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Select the largest one.\\',\\\\n \\'type\\': \\'Select a dot.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Select the largest one.\\'}, {\\'json\\': \"{\\'select\\': \\'False\\', \\'speaker\\': \\'Them\\', \\'text\\': \\'Okay.\\', \\'type\\': \\'No op.\\'}\", \\'speaker\\': \\'Them\\', \\'text\\': \\'Okay.\\'}, {\\'json\\': \"{\\'select\\': \\'False\\',\\\\n \\'speaker\\': \\'You\\',\\\\n \\'text\\': \\'Okay. <selection>.\\',\\\\n \\'type\\': \\'No op.\\'}\", \\'speaker\\': \\'You\\', \\'text\\': \\'Okay. <selection>.\\'}], \\'speaker\\': \\'You\\', \\'text\\': \\'Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light?\\', \\'past\\': [], \\'view\\': array([[ 0.125     , -0.815     , -1.        , -0.89333333],\\n       [-0.21      ,  0.585     ,  0.33333333, -0.97333333],\\n       [ 0.645     ,  0.185     , -1.        , -0.96      ],\\n       [ 0.305     ,  0.645     , -1.        , -0.97333333],\\n       [-0.705     ,  0.015     ,  0.        ,  0.84      ],\\n       [ 0.345     , -0.545     ,  0.66666667, -0.90666667],\\n       [-0.315     ,  0.165     ,  0.66666667,  0.8       ]])}', \"'action_status'\": \"'started'\", \"'timestamp'\": '1683526899.6143198', \"'task_uuid'\": \"'098c4311-07e0-4b4b-b991-60acf8293679'\", \"'action_type'\": \"'Input Function'\", \"'task_level'\": '[2, 1]'}", "timestamp": 1683526899.6149423, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "task_level": [3], "message_type": "eliot:destination_failure"}
{"action_status": "succeeded", "timestamp": 1683526899.6170604, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "Input Function", "task_level": [2, 2]}
{"prompt": "from oc.fns.context import get_ctx\nfrom oc.fns.shapes import is_triangle, is_line, is_square\nfrom oc.fns.spatial import all_close, is_above, is_below, is_right, is_left, is_middle\nfrom oc.fns.spatial import get_top, get_bottom, get_right, get_left\nfrom oc.fns.spatial import get_top_right, get_top_left, get_bottom_right, get_bottom_left\nfrom oc.fns.spatial import get_middle\nfrom oc.fns.spatial import get_distance, get_minimum_radius\nfrom oc.fns.color import is_dark, is_grey, is_light, lightest, darkest, same_color, different_color, is_darker, is_lighter\nfrom oc.fns.size import is_large, is_small, is_medium_size, largest, smallest, same_size, different_size, is_larger, is_smaller\nfrom oc.fns.iterators import get1idxs, get2idxs, get3idxs, getsets\nfrom oc.fns.lists import add\nfrom oc.fns.lists import sort_state\nimport numpy as np\nfrom functools import partial\nfrom itertools import permutations\n\n\nidxs = list(range(7))\n\n# New.\nctx = get_ctx()\nstate = []\n\n\nThem: Got a triangle of 3 light grey dots by itself.\nTranslate this to JSON:\n{'configdots': 'x,y,z',\n 'configs': 'getsets(idxs, 3)',\n 'constraints': [{'code': 'is_triangle([x,y,z], ctx)',\n                  'name': 'check_xyz_triangle'},\n                 {'code': 'all([is_light(dot, ctx) for dot in [x,y,z]])',\n                  'name': 'check_xyz_light'},\n                 {'code': 'all([not all_close([x,y,z,dot], ctx) for dot in '\n                          'idxs if dot not in [x,y,z]])',\n                  'name': 'check_xyz_alone'}],\n 'dots': 'x,y,z',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'Got a triangle of 3 light grey dots by itself.',\n 'type': 'New question.'}\n\nThem: Got a triangle of 3 light grey dots by itself.\nTranslate this to JSON:\n{'configdots': 'x,y,z',\n 'configs': 'getsets(idxs, 3)',\n 'constraints': [{'code': 'is_triangle([x,y,z], ctx)',\n                  'name': 'check_xyz_triangle'},\n                 {'code': 'all([is_light(dot, ctx) for dot in [x,y,z]])',\n                  'name': 'check_xyz_light'},\n                 {'code': 'all([not all_close([x,y,z,dot], ctx) for dot in '\n                          'idxs if dot not in [x,y,z]])',\n                  'name': 'check_xyz_alone'}],\n 'dots': 'x,y,z',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'Got a triangle of 3 light grey dots by itself.',\n 'type': 'New question.'}\n\nYou: Could be. One on right is largest with a tiny gray on top??\nTranslate this to JSON:\n{'configdots': 'a,b,c',\n 'configs': 'state',\n 'constraints': [{'code': 'a == get_right([a,b,c], ctx)',\n                  'name': 'check_a_right'},\n                 {'code': 'a == largest([a,b,c], ctx)',\n                  'name': 'check_a_largest'},\n                 {'code': 'is_small(b, ctx)', 'name': 'check_b_tiny'},\n                 {'code': 'is_grey(b, ctx)', 'name': 'check_b_grey'},\n                 {'code': 'b == get_top([a,b,c], ctx)', 'name': 'check_b_top'}],\n 'dots': 'a,b,c',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'You',\n 'text': 'Could be. One on right is largest with a tiny gray on top??',\n 'type': 'Follow up question.'}\n\nThem: Nevermind. Do you see a pair of dark dots? One with another above and to the right of it? Same size as well.\nTranslate this to JSON:\n{'configdots': 'x, y',\n 'configs': 'getsets(idxs, 2)',\n 'constraints': [{'code': 'all_close([x,y], ctx)', 'name': 'check_xy_pair'},\n                 {'code': 'is_dark(x, ctx) and is_dark(y, ctx)',\n                  'name': 'check_xy_dark'},\n                 {'code': 'is_right(y, x, ctx)', 'name': 'check_y_right_x'},\n                 {'code': 'is_above(y, x, ctx)', 'name': 'check_y_above_x'},\n                 {'code': 'same_size([x,y], ctx)',\n                  'name': 'check_xy_same_size'}],\n 'dots': 'x, y',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'Nevermind. Do you see a pair of dark dots? One with another above '\n         'and to the right of it? Same size as well.',\n 'type': 'New question.'}\n\nYou: No.\nTranslate this to JSON:\n{'select': 'False', 'speaker': 'You', 'text': 'No.', 'type': 'New question.'}\n\nThem: What about a large medium grey dot near the center?\nTranslate this to JSON:\n{'configdots': 'x,',\n 'configs': 'getsets(idxs, 1)',\n 'constraints': [{'code': 'is_large(x, ctx)', 'name': 'check_x_large'},\n                 {'code': 'is_grey(x, ctx)', 'name': 'check_x_grey'},\n                 {'code': 'is_middle(x, None, ctx)', 'name': 'check_x_center'}],\n 'dots': 'x',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'What about a large medium grey dot near the center?',\n 'type': 'New question.'}\n\nYou: Is there a smaller black one next to it?\nTranslate this to JSON:\n{'configdots': 'a,',\n 'configs': 'state',\n 'constraints': [{'code': 'is_smaller(x, a, ctx)', 'name': 'check_x_smaller_a'},\n                 {'code': 'is_dark(x, ctx)', 'name': 'check_x_dark'},\n                 {'code': 'all_close([a,x], ctx)',\n                  'name': 'check_x_next_to_a'}],\n 'dots': 'a,x',\n 'newconfigs': 'get1idxs(idxs, exclude=[a])',\n 'newdots': 'x,',\n 'select': 'False',\n 'speaker': 'You',\n 'text': 'Is there a smaller black one next to it?',\n 'type': 'Follow up question, new dot.'}\n\nThem: No. Do you see three dots in a diagonal line, where the top left dot is light, middle dot is grey, and bottom right dot is dark?\nTranslate this to JSON:\n{'configdots': 'x,y,z',\n 'configs': 'getsets(idxs, 3)',\n 'constraints': [{'code': 'is_line([x,y,z], ctx)', 'name': 'check_xyz_line'},\n                 {'code': 'x == get_top_left([x, y, z], ctx)',\n                  'name': 'check_x_top_left'},\n                 {'code': 'is_light(x, ctx)', 'name': 'check_x_light'},\n                 {'code': 'is_middle(y, [x,y,z], ctx)',\n                  'name': 'check_y_middle'},\n                 {'code': 'is_grey(y, ctx)', 'name': 'check_y_grey'},\n                 {'code': 'z == get_bottom_right([x, y, z], ctx)',\n                  'name': 'check_z_bottom_right'},\n                 {'code': 'is_dark(z, ctx)', 'name': 'check_z_dark'}],\n 'dots': 'x,y,z',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'No. Do you see three dots in a diagonal line, where the top left dot '\n         'is light, middle dot is grey, and bottom right dot is dark?',\n 'type': 'New question.'}\n\nYou: Yes. Is the top one close to the middle darker one?\nTranslate this to JSON:\n{'configdots': 'a,b,c',\n 'configs': 'state',\n 'constraints': [{'code': 'a == get_top([a,b,c], ctx)', 'name': 'check_a_top'},\n                 {'code': 'b == get_middle([a,b,c], ctx)',\n                  'name': 'check_b_middle'},\n                 {'code': 'all_close([a, b], ctx)', 'name': 'check_ab_close'},\n                 {'code': 'is_darker(b, a, ctx)', 'name': 'check_b_darker_a'}],\n 'dots': 'a,b,c',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'You',\n 'text': 'Yes. Is the top one close to the middle darker one?',\n 'type': 'Follow up question.'}\n\nThem: Yes. And the smallest is on the bottom right.\nTranslate this to JSON:\n{'configdots': 'a,b,c',\n 'configs': 'state',\n 'constraints': [{'code': 'a == smallest([a,b,c], ctx)',\n                  'name': 'check_a_smallest'},\n                 {'code': 'a == get_bottom_right([a,b,c], ctx)',\n                  'name': 'check_a_bottom_right'}],\n 'dots': 'a,b,c',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'Yes. And the smallest is on the bottom right.',\n 'type': 'Follow up question.'}\n\nYou: Yes, let's select the large one. <selection>.\nTranslate this to JSON:\n{'configdots': 'a,b,c',\n 'configs': 'state',\n 'constraints': [{'code': 'is_large(a, ctx)', 'name': 'check_a_large'},\n                 {'code': 'not is_large(b, ctx)', 'name': 'check_b_not_large'},\n                 {'code': 'not is_large(c, ctx)', 'name': 'check_c_not_large'}],\n 'dots': 'a',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'True',\n 'speaker': 'You',\n 'text': \"Yes, let's select the large one. <selection>.\",\n 'type': 'Select a dot.'}\n\nYou: Do you see a large black dot on the bottom left?\nTranslate this to JSON:\n{'configdots': 'x,',\n 'configs': 'getsets(idxs, 1)',\n 'constraints': [{'code': 'is_large(x, ctx)', 'name': 'check_x_large'},\n                 {'code': 'is_dark(x, ctx)', 'name': 'check_x_dark'},\n                 {'code': 'is_below(x, None, ctx) and is_left(x, None, ctx)',\n                  'name': 'check_x_below_left'}],\n 'dots': 'x',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'You',\n 'text': 'Do you see a large black dot on the bottom left?',\n 'type': 'New question.'}\n\nThem: I see a large black dot next to two smaller lighter dots. The two smaller ones are the same size and color. We have different views though.\nTranslate this to JSON:\n{'configdots': 'x,y,z',\n 'configs': 'getsets(idxs, 3)',\n 'constraints': [{'code': 'all_close([x,y,z], ctx)', 'name': 'check_xyz_close'},\n                 {'code': 'is_large(x, ctx)', 'name': 'check_x_large'},\n                 {'code': 'is_dark(z, ctx)', 'name': 'check_z_dark'},\n                 {'code': 'is_smaller(y, x, ctx)', 'name': 'check_y_smaller_x'},\n                 {'code': 'is_smaller(z, x, ctx)', 'name': 'check_z_smaller_x'},\n                 {'code': 'is_lighter(y, x, ctx)', 'name': 'check_y_lighter_x'},\n                 {'code': 'is_lighter(z, x, ctx)', 'name': 'check_z_lighter_x'},\n                 {'code': 'same_size([y,z], ctx)',\n                  'name': 'check_yz_same_size'},\n                 {'code': 'same_color([y,z], ctx)',\n                  'name': 'check_yz_same_color'}],\n 'dots': 'x,y,z',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'False',\n 'speaker': 'Them',\n 'text': 'I see a large black dot next to two smaller lighter dots. The two '\n         'smaller ones are the same size and color. We have different views '\n         'though.',\n 'type': 'New question.'}\n\nYou: Select the largest one.\nTranslate this to JSON:\n{'configdots': 'a,b,c',\n 'configs': 'state',\n 'constraints': [{'code': 'a == get_largest([a,b,c], ctx)',\n                  'name': 'check_a_largest'}],\n 'dots': 'a',\n 'newconfigs': '[0]',\n 'newdots': '_',\n 'select': 'True',\n 'speaker': 'You',\n 'text': 'Select the largest one.',\n 'type': 'Select a dot.'}\n\nThem: Okay.\nTranslate this to JSON:\n{'select': 'False', 'speaker': 'Them', 'text': 'Okay.', 'type': 'No op.'}\n\nYou: Okay. <selection>.\nTranslate this to JSON:\n{'select': 'False',\n 'speaker': 'You',\n 'text': 'Okay. <selection>.',\n 'type': 'No op.'}\n\nYou: Do you see a pair of dots, where the top dot is medium-sized and dark and the bottom dot is large-sized and light?\nTranslate this to JSON:", "action_status": "started", "timestamp": 1683526899.617096, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "Prompted", "task_level": [4, 1]}
{"action_status": "succeeded", "timestamp": 1683526922.0089712, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "Prompted", "task_level": [4, 2]}
{"result": "{'configdots': 'x, y',\n 'configs': 'getsets(idxs, 2)',\n 'constraints': [{'code': 'all_close([x,y], ctx)', 'name': 'check_xy_pair'},\n                 {'code': 'is_above(x, y, ctx)', 'name': 'check_x_above_y'},\n                 {'code': 'is_medium_size(x, ctx)', 'name': 'check_x_medium'},\n                 {'code': 'is_dark(x, ctx)', 'name': 'check_x_dark'},\n                 {'code': 'is_large(y, ctx)', 'name': 'check_y_large'},\n                 {'code':", "action_status": "started", "timestamp": 1683526922.0091703, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "Result", "task_level": [5, 1]}
{"exception": "bdb.BdbQuit", "reason": "", "action_status": "failed", "timestamp": 1683527038.393172, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "Result", "task_level": [5, 2]}
{"exception": "bdb.BdbQuit", "reason": "", "action_status": "failed", "timestamp": 1683527038.3933818, "task_uuid": "098c4311-07e0-4b4b-b991-60acf8293679", "action_type": "<class 'oc.prompt.UnderstandJson'>", "task_level": [6]}
{"action_status": "succeeded", "timestamp": 1683527038.3934944, "task_uuid": "49f03715-8265-4170-a5b0-7c25d6e91f97", "action_type": "tmp.txt", "task_level": [2]}
