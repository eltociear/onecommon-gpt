{"chat_id": "C_a784d4bb34cf4b129d28e7bcbc564732", "scenario_id": "S_m5t0eZ17JHhXqIxB", "view": [[0.085, 0.11, 0.0, 0.28], [0.29, -0.36, -0.6666666666666666, -0.14666666666666667], [-0.36, -0.7, -0.6666666666666666, -0.8666666666666667], [0.185, 0.42, 0.6666666666666666, -0.13333333333333333], [-0.35, 0.435, 0.0, -0.52], [0.95, 0.06, 0.0, -0.5066666666666667], [-0.52, -0.785, 0.0, 0.7733333333333333]], "turns": ["Them: hello . do you have one medium gray dot by itself ?", "You: kind of between two darker ones ?", "Them: it 's large and i show one dark smaller one to the left of it and one medium colored and sized one under and to the left .", "You: yes , i see that one", "Them: the large medium gray one correct ?", "You: yes", "Them: okay , you can select that one . <selection>"], "referents": [[{"begin": 5, "end": 8, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 10, "end": 10, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 3, "end": 5, "target": [0, 0, 0, 0, 1, 1, 0]}], [{"begin": 0, "end": 1, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 6, "end": 9, "target": [0, 0, 0, 0, 1, 0, 0]}, {"begin": 14, "end": 14, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 16, "end": 21, "target": [1, 0, 0, 0, 0, 0, 0]}], [{"begin": 4, "end": 5, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 0, "end": 4, "target": [0, 0, 0, 1, 0, 0, 0]}], [], [{"begin": 5, "end": 6, "target": [0, 0, 0, 1, 0, 0, 0]}]], "labels": [[0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], "preds": [[[1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]]], "past": [["Them: Hello. Do you have one, medium-gray dot by itself?", "def turn(state):\n    # New question.\n    results = []\n    for dot in get1dots(all_dots):\n        if is_medium(dot, ctx) and is_grey(dot, ctx):\n            results.append(dot)\n    return results\nstate = turn(state)"], ["You: Kind of between two darker ones?", "def turn(state):\n    # Follow up question.\n    results = []\n    for result in state:\n        for x,y in get2dots(all_dots):\n            if all_close(add(result, np.array([x,y])), ctx) and are_darker(np.array([x,y]), result, ctx):\n                results.append(add(result, np.array([x,y])))\n    return results\nstate = turn(state)"], ["Them: It's large, and I show one dark, smaller one to the left of it, and one medium-colored and sized one under and to the left.", "def turn(state):\n    # New question.\n    results = []\n    for result in state:\n        for x,y,z in get3dots(all_dots):\n            if (\n                all_close(add(result, np.array([x,y,z])), ctx)\n                and is_large(result, ctx)\n                and is_dark(x, ctx)\n                and are_left(x, result, ctx)\n                and are_below(x, result, ctx)\n                and is_small(x, ctx)\n                and is_medium(y, ctx)\n                and are_left(y, result, ctx)\n                and are_below(y, result, ctx)\n                and is_medium(y, ctx)\n            ):\n                results.append(add(result, np.array([x,y,z])))\n    return results\nstate = turn(state)"], ["You: Yes, I see that one.", "def turn(state):\n    # New question.\n    results = []\n    for result in state:\n        results.append(result)\n    return results\nstate = turn(state)"], ["Them: The large, medium-gray one correct?", "def turn(state):\n    # Follow up question.\n    results = []\n    for result in state:\n        for dot in result:\n            if is_large(dot, ctx) and is_medium(dot, ctx) and is_grey(dot, ctx):\n                results.append(np.array([dot]))\n    return results\nstate = turn(state)"], ["You: Yes", "def turn(state):\n    # New question.\n    results = []\n    for result in state:\n        results.append(result)\n    return results\nstate = turn(state)"], ["Them: Okay, you can select that one. <selection>", "def select(state):\n    # Select a dot.\n    return state\nstate = select(state)"]], "agent": 0, "dot_ids": ["10", "35", "42", "47", "49", "65", "67"], "partner_dot_ids": ["10", "11", "42", "47", "49", "51", "67"], "output": 3}