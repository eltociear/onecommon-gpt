{"chat_id": "C_a784d4bb34cf4b129d28e7bcbc564732", "scenario_id": "S_m5t0eZ17JHhXqIxB", "view": [[0.76, 0.105, 0.0, 0.28], [-0.475, 0.36, -0.3333333333333333, -0.13333333333333333], [0.315, -0.7, -0.6666666666666666, -0.8666666666666667], [0.86, 0.42, 0.6666666666666666, -0.13333333333333333], [0.325, 0.435, 0.0, -0.52], [-0.365, 0.58, -0.3333333333333333, -0.12], [0.16, -0.785, 0.0, 0.7733333333333333]], "turns": ["You: hello . do you have one medium gray dot by itself ?", "Them: kind of between two darker ones ?", "You: it 's large and i show one dark smaller one to the left of it and one medium colored and sized one under and to the left .", "Them: yes , i see that one", "You: the large medium gray one correct ?", "Them: yes", "You: okay , you can select that one . <selection>"], "referents": [[{"begin": 5, "end": 8, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 10, "end": 10, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 3, "end": 5, "target": [0, 0, 0, 0, 1, 0, 0]}], [{"begin": 0, "end": 1, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 6, "end": 9, "target": [0, 0, 0, 0, 1, 0, 0]}, {"begin": 14, "end": 14, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 16, "end": 21, "target": [1, 0, 0, 0, 0, 0, 0]}], [{"begin": 4, "end": 5, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 0, "end": 4, "target": [0, 0, 0, 1, 0, 0, 0]}], [], [{"begin": 5, "end": 6, "target": [0, 0, 0, 1, 0, 0, 0]}]], "labels": [[0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], "preds": [[[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]]], "past": [["You: Hello. Do you have one medium gray dot by itself?", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_medium = is_medium_size(x, ctx)\n        check_x_grey = is_grey(x, ctx)\n        check_x_alone = all([not all_close([x, dot], ctx) for dot in idxs if dot != x])\n        if (\n            check_x_medium\n            and check_x_grey\n            and check_x_alone\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["Them: Kind of between two darker ones?", "def turn(state):\n    # Follow up question.\n    results = []\n    for a, in state:\n        for x, y in get2idxs(idxs):\n            check_xy_dark = is_dark(x, ctx) and is_dark(y, ctx)\n            check_a_between_xy = is_middle(a, [x, y], ctx)\n            if (\n                check_xy_dark\n                and check_a_between_xy\n            ):\n                results.append([a, x, y])\n    return results\nstate = turn(state)"], ["You: It's large and I show one dark, smaller one to the left of it and one medium colored and sized one under and to the left.", "def turn(state):\n    # Follow up question.\n    results = []\n    for a, x, y in state:\n        check_a_large = is_large(a, ctx)\n        check_x_smaller_a = is_smaller(x, a, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_left_a = is_left(x, a, ctx)\n        check_y_medium_size = is_medium_size(y, ctx)\n        check_y_medium_color = is_grey(y, ctx)\n        check_y_below_left_a = is_below(y, a, ctx) and is_left(y, a, ctx)\n        if (\n            check_a_large\n            and check_x_smaller_a\n            and check_x_dark\n            and check_x_left_a\n            and check_y_medium_size\n            and check_y_medium_color\n            and check_y_below_left_a\n        ):\n            results.append([a, x, y])\n    return results\nstate = turn(state)"], ["Them: Yes, I see that one.", "def turn(state):\n    # No op.\n    return state\nstate = turn(state)"], ["You: Correct, the large medium gray one?", "def turn(state):\n    # Follow up question.\n    results = []\n    for a, x, y in state:\n        check_a_large = is_large(a, ctx)\n        check_a_grey = is_grey(a, ctx)\n        if (\n            check_a_large\n            and check_a_grey\n        ):\n            results.append([a])\n    return results\nstate = turn(state)"], ["Them: Yes.", "def turn(state):\n    # No op.\n    return state\nstate = turn(state)"], ["You: Okay, you can select that one. <selection>.", "def select(state):\n    # Select a dot.\n    return state\nstate = select(state)"]], "agent": 1, "dot_ids": ["10", "11", "42", "47", "49", "51", "67"], "partner_dot_ids": ["10", "35", "42", "47", "49", "65", "67"], "output": 3, "parsedtext": ["You: Hello. Do you have one medium gray dot by itself?", "Them: Kind of between two darker ones?", "You: It's large and I show one dark, smaller one to the left of it and one medium colored and sized one under and to the left.", "Them: Yes, I see that one.", "You: Correct, the large medium gray one?", "Them: Yes.", "You: Okay, you can select that one. <selection>."]}