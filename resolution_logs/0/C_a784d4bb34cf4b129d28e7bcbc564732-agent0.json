{"chat_id": "C_a784d4bb34cf4b129d28e7bcbc564732", "scenario_id": "S_m5t0eZ17JHhXqIxB", "view": [[0.085, 0.11, 0.0, 0.28], [0.29, -0.36, -0.6666666666666666, -0.14666666666666667], [-0.36, -0.7, -0.6666666666666666, -0.8666666666666667], [0.185, 0.42, 0.6666666666666666, -0.13333333333333333], [-0.35, 0.435, 0.0, -0.52], [0.95, 0.06, 0.0, -0.5066666666666667], [-0.52, -0.785, 0.0, 0.7733333333333333]], "turns": ["Them: hello . do you have one medium gray dot by itself ?", "You: kind of between two darker ones ?", "Them: it 's large and i show one dark smaller one to the left of it and one medium colored and sized one under and to the left .", "You: yes , i see that one", "Them: the large medium gray one correct ?", "You: yes", "Them: okay , you can select that one . <selection>"], "referents": [[{"begin": 5, "end": 8, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 10, "end": 10, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 3, "end": 5, "target": [0, 0, 0, 0, 1, 1, 0]}], [{"begin": 0, "end": 1, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 6, "end": 9, "target": [0, 0, 0, 0, 1, 0, 0]}, {"begin": 14, "end": 14, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 16, "end": 21, "target": [1, 0, 0, 0, 0, 0, 0]}], [{"begin": 4, "end": 5, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 0, "end": 4, "target": [0, 0, 0, 1, 0, 0, 0]}], [], [{"begin": 5, "end": 6, "target": [0, 0, 0, 1, 0, 0, 0]}]], "labels": [[0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], "preds": [[[1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]]], "past": [["Them: Hello. Do you have one medium gray dot by itself?", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_medium = is_medium(x, ctx)\n        check_x_grey = is_grey(x, ctx)\n        check_x_alone = all([not all_close([x,dot], ctx) for dot in idxs if dot != x])\n        if (\n            check_x_medium\n            and check_x_grey\n            and check_x_alone\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["You: Kind of between two darker ones?", "def turn(state):\n    # Follow up question.\n    results = []\n    for a, in state:\n        for x, y in get2idxs(idxs):\n            check_xy_medium = is_medium(x, ctx) and is_medium(y, ctx)\n            check_xy_grey = is_grey(x, ctx) and is_grey(y, ctx)\n            check_xy_not_alone = all([not all_close([x,dot], ctx) for dot in idxs if dot not in [x,y]])\n            check_x_between_y = is_between(x, y, a, ctx)\n            check_x_not_y = x != y\n            if (\n                check_xy_medium\n                and check_xy_grey\n                and check_xy_not_alone\n                and check_x_between_y\n                and check_x_not_y\n            ):\n                results.append([a,x,y])\n    return results\nstate = turn(state)"], ["Them: It's large, and I show one dark smaller one to the left of it and one medium-colored and sized one under and to the left.", "def turn(state):\n    # New question.\n    results = []\n    for a,b,c in get3idxs(idxs):\n        check_abc_triangle = is_triangle([a,b,c], ctx)\n        check_a_large = is_large(a, ctx)\n        check_b_smaller_a = is_smaller(b, a, ctx)\n        check_b_dark = is_dark(b, ctx)\n        check_c_under_left_a = is_below(c, a, ctx) and is_left(c, a, ctx)\n        check_c_medium = is_medium(c, ctx)\n        check_c_same_size_as_b = same_size([b,c], ctx)\n        if (\n            check_abc_triangle\n            and check_a_large\n            and check_b_smaller_a\n            and check_b_dark\n            and check_c_under_left_a\n            and check_c_medium\n            and check_c_same_size_as_b\n        ):\n            results.append([a,b,c])\n    return results\nstate = turn(state)"], ["You: Yes, I see that one.", "def turn(state):\n    # No question, just acknowledgement.\n    return state\nstate = turn(state)"], ["Them: Is the large medium gray one correct?", "def turn(state):\n    # New question.\n    results = []\n    for a,b,c in state:\n        check_a_large = is_large(a, ctx)\n        check_a_medium = is_medium(a, ctx)\n        check_a_grey = is_grey(a, ctx)\n        if (\n            check_a_large\n            and check_a_medium\n            and check_a_grey\n        ):\n            results.append([a,b,c])\n    return results\nstate = turn(state)"], ["You: Yes.", "def turn(state):\n    # No question, just acknowledgement.\n    return state\nstate = turn(state)"], ["Them: Okay, you can select that one. <selection>", "def select(state):\n    # Select a dot.\n    results = []\n    for a,b,c in state:\n        results.append(a)\n    return results\nstate = select(state)"]], "agent": 0, "dot_ids": ["10", "35", "42", "47", "49", "65", "67"], "partner_dot_ids": ["10", "11", "42", "47", "49", "51", "67"], "output": 3}