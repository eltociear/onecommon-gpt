{"chat_id": "C_f119b344c1e8405e8829cb953e679791", "scenario_id": "S_EZOBugPsBBTML4LM", "view": [[0.115, 0.185, 1.0, -0.9866666666666667], [-0.125, -0.745, 0.0, 0.8533333333333334], [-0.065, 0.615, 1.0, 0.96], [-0.54, 0.58, 0.0, -0.9333333333333333], [0.405, -0.06, -0.3333333333333333, -0.36], [0.555, -0.295, 0.6666666666666666, 0.56], [-0.25, 0.155, -0.3333333333333333, 0.7866666666666666]], "turns": ["Them: there is a medium grey mid sized dot at four oclock on the edge", "You: i have a large black dot with a small black dot down and to the right", "Them: the large one may be it , is there a large light grey above it ?", "You: up and to the left of it yes", "Them: do you want to choose that one , the light grey ?", "You: yes let 's pick <selection>"], "referents": [[{"begin": 2, "end": 7, "target": [0, 0, 0, 0, 1, 0, 0]}], [{"begin": 2, "end": 5, "target": [1, 0, 0, 0, 0, 0, 0]}, {"begin": 7, "end": 10, "target": [0, 0, 0, 0, 1, 0, 0]}], [{"begin": 0, "end": 2, "target": [1, 0, 0, 0, 0, 0, 0]}, {"begin": 9, "end": 12, "target": [0, 0, 1, 0, 0, 0, 0]}], [{"begin": 6, "end": 6, "target": [1, 0, 0, 0, 0, 0, 0]}], [{"begin": 5, "end": 6, "target": [0, 0, 1, 0, 0, 0, 0]}], []], "labels": [[0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]], "preds": [[[1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]]], "past": [["Them: There is a medium grey, mid-sized dot at four o'clock on the edge.", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_medium = is_medium(x, ctx)\n        check_x_grey = is_grey(x, ctx)\n        check_x_on_edge = any([\n            x == get_bottom_right([x], ctx),\n            x == get_bottom_left([x], ctx),\n            x == get_top_right([x], ctx),\n            x == get_top_left([x], ctx)\n        ])\n        check_x_at_four_oclock = any([\n            x == get_bottom_right([x], ctx),\n            x == get_top_right([x], ctx)\n        ])\n        if (\n            check_x_medium\n            and check_x_grey\n            and check_x_on_edge\n            and check_x_at_four_oclock\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["You: I have a large black dot with a small black dot down and to the right.", "def turn(state):\n    # New question.\n    results = []\n    for x, y in get2idxs(idxs):\n        check_xy_close = all_close([x,y], ctx)\n        check_x_large = is_large(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_y_small = is_small(y, ctx)\n        check_y_dark = is_dark(y, ctx)\n        check_y_below_right_x = are_below_right([y], [x], ctx)\n        if (\n            check_xy_close\n            and check_x_large\n            and check_x_dark\n            and check_y_small\n            and check_y_dark\n            and check_y_below_right_x\n        ):\n            results.append([x,y])\n    return results\nstate = turn(state)"], ["Them: The large one may be it. Is there a large light grey above it?", "def turn(state):\n    # Follow up question.\n    results = []\n    for a,b in state:\n        check_a_large = is_large(a, ctx)\n        check_a_light_grey = all([is_light(a, ctx), is_grey(a, ctx)])\n        check_b_above_a = are_above([b], [a], ctx)\n        if (\n            check_a_large\n            and check_a_light_grey\n            and check_b_above_a\n        ):\n            results.append([a,b])\n    return results\nstate = turn(state)"], ["You: Yes, up and to the left of it.", "def turn(state):\n    # Follow up question.\n    results = []\n    for a,b in state:\n        top_left = get_top_left([a,b], ctx)\n        check_top_left = all_close([top_left], ctx)\n        if (\n            check_top_left\n        ):\n            results.append([a,b])\n    return results\nstate = turn(state)"], ["Them: Do you want to choose that one, the light grey?", "def select(state):\n    # Select a dot.\n    results = []\n    for a,b in state:\n        check_a_light_grey = all([is_light(a, ctx), is_grey(a, ctx)])\n        if (\n            check_a_light_grey\n        ):\n            results.append(a)\n    return results\nstate = select(state)"], ["You: Yes, let's pick <selection>.", "def confirm(state):\n    # Confirm selection.\n    return state\nstate = confirm(state)"]], "agent": 1, "dot_ids": ["8", "14", "39", "50", "51", "63", "68"], "partner_dot_ids": ["8", "39", "50", "51", "55", "65", "68"], "output": 2}