{"chat_id": "C_3cb4ebcdd7614e31be17827272465d34", "scenario_id": "S_SPOHxslqTXzN8sTI", "view": [[0.625, 0.23, -0.6666666666666666, 0.37333333333333335], [0.85, 0.12, -0.3333333333333333, 0.7066666666666667], [-0.53, 0.25, 1.0, 0.9066666666666666], [0.73, -0.125, -0.6666666666666666, 0.10666666666666667], [0.46, -0.27, 0.6666666666666666, -0.17333333333333334], [0.71, 0.57, 0.3333333333333333, 0.9866666666666667], [-0.805, -0.47, -0.3333333333333333, 0.09333333333333334]], "turns": ["You: 3 dots in a triangle all medium small one on the right is the lightest", "Them: lightest is on right , yes", "You: okay select the lightest biggest on the right <selection>"], "referents": [[{"begin": 0, "end": 1, "target": [1, 1, 0, 1, 0, 0, 0]}, {"begin": 5, "end": 5, "target": [1, 1, 0, 1, 0, 0, 0]}, {"begin": 7, "end": 8, "target": [0, 1, 0, 0, 0, 0, 0]}], [{"begin": 0, "end": 0, "target": [0, 1, 0, 0, 0, 0, 0]}], [{"begin": 2, "end": 4, "target": [0, 1, 0, 0, 0, 0, 0]}]], "labels": [[true, true, false, true, false, false, false], [false, true, false, false, false, false, false], [false, true, false, false, false, false, false]], "preds": [[[false, false, false, false, false, false, false]], [[false, false, false, false, false, false, false]], [[false, false, false, false, false, false, false]]], "past": [["Confirmation: Confirm.\nGive names to the dots and list the properties described.\n* New dots A B C\n* A B C triangle\n* A medium-small\n* B medium-small\n* C medium-small\n* C on right of A B C\n* C lightest of A B C", "def turn(state):\n    # New question.\n    results = []\n    for x,y,z in get3idxs(idxs):\n        check_xyz_triangle = is_triangle([x,y,z], ctx)\n        check_xyz_medium_small = all([is_medium_size(dot, ctx) for dot in [x,y,z]])\n        check_xyz_right = z == get_right([x,y,z], ctx)\n        check_xyz_lightest = z == lightest([x,y,z], ctx)\n        if (\n            check_xyz_triangle\n            and check_xyz_medium_small\n            and check_xyz_right\n            and check_xyz_lightest\n        ):\n            results.append([x,y,z])\n    return results\nstate = turn(state)"], ["Confirmation: Confirm.\nGive names to the dots and list the properties described.\n* New dots A B\n* A and B are light\n* A on left of A B\n* B on right of A B", "def turn(state):\n    # New question.\n    results = []\n    for x,y in get2idxs(idxs):\n        check_xy_light = all([is_light(dot, ctx) for dot in [x,y]])\n        check_x_left_y = x == get_left([x,y], ctx)\n        check_y_right_x = y == get_right([x,y], ctx)\n        if (\n            check_xy_light\n            and check_x_left_y\n            and check_y_right_x\n        ):\n            results.append([x,y])\n    return results\nstate = turn(state)"], ["Confirmation: Confirm.\nSelection.", "def select(state):\n    # Select a dot.\n    return state\nstate = select(state)"]], "agent": 0, "dot_ids": ["0", "26", "28", "47", "57", "69", "79"], "partner_dot_ids": ["0", "3", "26", "47", "57", "68", "69"], "output": 1, "parsedtext": ["Three dots in a triangle, all medium-small. The one on the right is the lightest.", "Yes, the lightest is on the right.", "Okay, select the lightest and biggest one on the right. <selection>"], "bullet": ["Confirmation: Confirm.\nGive names to the dots and list the properties described.\n* New dots A B C\n* A B C triangle\n* A medium-small\n* B medium-small\n* C medium-small\n* C on right of A B C\n* C lightest of A B C", "Confirmation: Confirm.\nGive names to the dots and list the properties described.\n* New dots A B\n* A and B are light\n* A on left of A B\n* B on right of A B", "Confirmation: Confirm.\nSelection."]}