{"chat_id": "C_d9e6a1f14d8347dfa51a1c29fab3c104", "scenario_id": "S_WKgxzCvcycMDcy1f", "view": [[-0.88, -0.355, 0.0, 0.92], [0.565, -0.8, -1.0, -0.8933333333333333], [0.235, 0.595, 0.3333333333333333, -0.9733333333333334], [0.745, 0.655, -1.0, -0.9733333333333334], [-0.26, 0.025, 0.0, 0.84], [0.79, -0.53, 0.6666666666666666, -0.9066666666666666], [0.125, 0.175, 0.6666666666666666, 0.8]], "turns": ["Them: hi , do you have a tiny black dot near the 1 oclock position ?", "You: do you have a large dark grey dot next to a smaller black dot ?", "Them: no , i have two large black dots", "You: i do have a smaller black dot at 1 o'clock position ( sorry i ca n't reply until you did ) . i also have a lone large grey dot at 8 o'clock position", "Them: i have the smaller one at 1 o'clock . do you want to select that one ?", "You: yes that sounds like our best bet . : ) <selection>"], "referents": [[{"begin": 5, "end": 8, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 3, "end": 7, "target": [0, 0, 0, 0, 0, 1, 0]}, {"begin": 10, "end": 13, "target": [0, 1, 0, 1, 0, 0, 0]}], [{"begin": 4, "end": 7, "target": [0, 0, 1, 0, 0, 1, 0]}], [{"begin": 3, "end": 6, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 25, "end": 29, "target": [1, 0, 0, 0, 0, 0, 0]}], [{"begin": 2, "end": 4, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 14, "end": 15, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 1, "end": 1, "target": [0, 0, 0, 1, 0, 0, 0]}]], "labels": [[0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], "preds": [[[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]], [[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], [[0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]]], "past": [["Them: Hi, do you have a tiny black dot near the 1 o'clock position?", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_small = is_small(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_above_right = are_above_right([x], None, ctx)\n        if (\n            check_x_small\n            and check_x_dark\n            and check_x_above_right\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["You: Do you have a large dark grey dot next to a smaller black dot?", "def turn(state):\n    # New question.\n    results = []\n    for x,y in get2idxs(idxs):\n        check_xy_close = all_close([x,y], ctx)\n        check_x_large = is_large(x, ctx)\n        check_y_small = is_small(y, ctx)\n        check_x_grey = is_grey(x, ctx)\n        check_y_dark = is_dark(y, ctx)\n        check_xy_next_to_each_other = are_right([y], [x], ctx) or are_left([y], [x], ctx)\n        if (\n            check_xy_close\n            and check_x_large\n            and check_y_small\n            and check_x_grey\n            and check_y_dark\n            and check_xy_next_to_each_other\n        ):\n            results.append([x,y])\n    return results\nstate = turn(state)"], ["Them: No, I have two large black dots.", "def turn(state):\n    # New information.\n    results = []\n    for a,b in get2idxs(idxs):\n        check_ab_close = all_close([a,b], ctx)\n        check_a_large = is_large(a, ctx)\n        check_b_large = is_large(b, ctx)\n        check_a_dark = is_dark(a, ctx)\n        check_b_dark = is_dark(b, ctx)\n        if (\n            check_ab_close\n            and check_a_large\n            and check_b_large\n            and check_a_dark\n            and check_b_dark\n        ):\n            results.append([a,b])\n    return results\nstate = turn(state)"], ["You: I do have a smaller black dot at the 1 o'clock position (sorry I can't reply until you did). I also have a lone large grey dot at the 8 o'clock position.", "def turn(state):\n    # New information.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_small = is_small(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_above_right = are_above_right([x], None, ctx)\n        if (\n            check_x_small\n            and check_x_dark\n            and check_x_above_right\n        ):\n            results.append([x])\n    for x, in get1idxs(idxs):\n        check_x_large = is_large(x, ctx)\n        check_x_grey = is_grey(x, ctx)\n        check_x_below_left = are_below_left([x], None, ctx)\n        check_x_alone = all([not all_close([x,dot], ctx) for dot in idxs if dot != x])\n        if (\n            check_x_large\n            and check_x_grey\n            and check_x_below_left\n            and check_x_alone\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["Them: I have the smaller one at 1 o'clock. Do you want to select that one?", "def turn(state):\n    # Follow up question.\n    results = []\n    for a, in state:\n        check_a_small = is_small(a, ctx)\n        check_a_dark = is_dark(a, ctx)\n        check_a_above_right = are_above_right([a], None, ctx)\n        if (\n            check_a_small\n            and check_a_dark\n            and check_a_above_right\n        ):\n            results.append([a])\n    return results\nstate = turn(state)"], ["You: Yes, that sounds like our best bet. :) <selection>", "def select(state):\n    # Select a dot.\n    return state\nstate = select(state)"]], "agent": 1, "dot_ids": ["0", "2", "20", "34", "52", "70", "73"], "partner_dot_ids": ["2", "20", "33", "34", "52", "70", "73"], "output": 3}