{"chat_id": "C_d9e6a1f14d8347dfa51a1c29fab3c104", "scenario_id": "S_WKgxzCvcycMDcy1f", "view": [[0.125, -0.815, -1.0, -0.8933333333333333], [-0.21, 0.585, 0.3333333333333333, -0.9733333333333334], [0.645, 0.185, -1.0, -0.96], [0.305, 0.645, -1.0, -0.9733333333333334], [-0.705, 0.015, 0.0, 0.84], [0.345, -0.545, 0.6666666666666666, -0.9066666666666666], [-0.315, 0.165, 0.6666666666666666, 0.8]], "turns": ["You: hi , do you have a tiny black dot near the 1 oclock position ?", "Them: do you have a large dark grey dot next to a smaller black dot ?", "You: no , i have two large black dots", "Them: i do have a smaller black dot at 1 o'clock position ( sorry i ca n't reply until you did ) . i also have a lone large grey dot at 8 o'clock position", "You: i have the smaller one at 1 o'clock . do you want to select that one ?", "Them: yes that sounds like our best bet . : ) <selection>"], "referents": [[{"begin": 5, "end": 8, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 3, "end": 7, "target": [0, 0, 0, 0, 0, 1, 0]}, {"begin": 10, "end": 13, "target": [1, 0, 0, 1, 0, 0, 0]}], [{"begin": 4, "end": 7, "target": [0, 1, 0, 0, 0, 1, 0]}], [{"begin": 3, "end": 6, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 25, "end": 29, "target": [0, 0, 0, 0, 0, 0, 0]}], [{"begin": 2, "end": 4, "target": [0, 0, 0, 1, 0, 0, 0]}, {"begin": 14, "end": 15, "target": [0, 0, 0, 1, 0, 0, 0]}], [{"begin": 1, "end": 1, "target": [0, 0, 0, 1, 0, 0, 0]}]], "labels": [[0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], "preds": [[[1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0]]], "past": [["You: Hi, do you have a tiny black dot near the 1 o'clock position?", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_small = is_small(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_above_right = are_above_right([x], None, ctx)\n        if (\n            check_x_small\n            and check_x_dark\n            and check_x_above_right\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["Them: Do you have a large dark grey dot next to a smaller black dot?", "def turn(state):\n    # New question.\n    results = []\n    for x, y in get2idxs(idxs):\n        check_xy_close = all_close([x, y], ctx)\n        check_x_large = is_large(x, ctx)\n        check_x_dark_grey = is_dark(x, ctx) and is_grey(x, ctx)\n        check_y_smaller_x = are_smaller([y], [x], ctx)\n        check_y_dark = is_dark(y, ctx)\n        if (\n            check_xy_close\n            and check_x_large\n            and check_x_dark_grey\n            and check_y_smaller_x\n            and check_y_dark\n        ):\n            results.append([x, y])\n    return results\nstate = turn(state)"], ["You: No, I have two large black dots.", "def turn(state):\n    # Follow up question.\n    results = []\n    for x, y in get2idxs(idxs):\n        check_xy_close = all_close([x, y], ctx)\n        check_x_large = is_large(x, ctx)\n        check_y_large = is_large(y, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_y_dark = is_dark(y, ctx)\n        if (\n            check_xy_close\n            and check_x_large\n            and check_y_large\n            and check_x_dark\n            and check_y_dark\n        ):\n            results.append([x, y])\n    return results\nstate = turn(state)"], ["Them: I do have a smaller black dot at the 1 o'clock position (sorry I can't reply until you did). I also have a lone large grey dot at the 8 o'clock position.", "def turn(state):\n    # New question.\n    results = []\n    for x, in get1idxs(idxs):\n        check_x_small = is_small(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_above_right = are_above_right([x], None, ctx)\n        check_x_alone = all([not all_close([x, dot], ctx) for dot in idxs if dot != x])\n        check_x_large_grey = is_large(x, ctx) and is_grey(x, ctx)\n        check_x_below_left = are_below_left([x], None, ctx)\n        if (\n            check_x_small\n            and check_x_dark\n            and check_x_above_right\n            and check_x_alone\n            and check_x_large_grey\n            and check_x_below_left\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["You: I have the smaller one at 1 o'clock. Do you want to select that one?", "def turn(state):\n    # Follow up question.\n    results = []\n    for x, in state:\n        check_x_small = is_small(x, ctx)\n        check_x_dark = is_dark(x, ctx)\n        check_x_above_right = are_above_right([x], None, ctx)\n        if (\n            check_x_small\n            and check_x_dark\n            and check_x_above_right\n        ):\n            results.append([x])\n    return results\nstate = turn(state)"], ["Them: Yes, that sounds like our best bet. :) <selection>", "def select(state):\n    # Select a dot.\n    return state\nstate = select(state)"]], "agent": 0, "dot_ids": ["2", "20", "33", "34", "52", "70", "73"], "partner_dot_ids": ["0", "2", "20", "34", "52", "70", "73"], "output": 3}