{{ header }}

all_dots = np.arange(7)
ctx = get_dots()
state = []

# Them: got a triangle of 3 light grey dots.
def turn(state):
    results = []
    for x,y,z in get3dots(all_dots):
        if is_triangle([x,y,z], ctx) and all(map(partial(is_light, ctx=ctx), [x,y,z])):
            results.append(np.array([x,y,z]))
    return results
state = turn(state)

# You: Could be. One on right is largest?
def turn(state):
    # Follow up question.
    results = state
    for result in results:
        if (largest(result, ctx) == get_right(result, ctx)).all():
            results.append(result)
    return results
state = turn(state)

# Them: Nevermind. Do you see a pair of dark dots?
def turn(state):
    # New question.
    results = []
    for result in get2dots(all_dots):
        if all_close(result, ctx) and all(map(partial(is_dark, ctx=ctx), result)):
            results.append(result)
    return results
state = turn(state)

# You: No.
def turn(state):
    results = []
    return results
state = turn(state)

# Them: What about a large medium grey dot?
def turn(state):
    results = []
    for dot in all_dots:
        if is_large(dot, ctx):
            results.append(dot)
    return results
state = turn(state)

# You: Is there a small black one next to it?
def turn(state):
    results = []
    for prev_dots in state:
        for dot in get1dots(all_dots):
            if is_small(dot, ctx) and is_dark(dot, ctx) and all_close(prev_dots + dot, ctx) and not are_middle(dot, prev_dots, ctx):
                results.append(prev_dots + dot)
    return results
state = turn(state)

# Them: Yes, let's select the large one.
def select(state):
    results = [dot for dots in state for dot in dots]
    for dot in results:
        if is_large(dot):
            return [dot]
state = select(state)


dots = get_dots()
state = []
{% if past is defined and past|length > 0 %}{% for block in past %}
# {{ block[0] }}
{{ block[1] }}
{% endfor %}{% endif %}
# {{text}}
